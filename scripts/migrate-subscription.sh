#!/bin/bash

# Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö migrate subscription columns
echo "üê± ‡∏Å‡∏≥‡∏•‡∏±‡∏á migrate subscription columns..."

# ‡∏î‡∏π environment
if [ -f .env.local ]; then
    source .env.local
    echo "‚úÖ ‡πÇ‡∏´‡∏•‡∏î .env.local ‡πÅ‡∏•‡πâ‡∏ß"
else
    echo "‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ .env.local"
    exit 1
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ development server ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
echo "üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ development server ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà..."

# ‡∏•‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á port 3000 ‡πÅ‡∏•‡∏∞ 3001
API_URL=""
if curl -s -f "http://localhost:3000/api/migrate-subscription" > /dev/null 2>&1; then
    API_URL="http://localhost:3000"
    echo "‚úÖ Development server ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà port 3000"
elif curl -s -f "http://localhost:3001/api/migrate-subscription" > /dev/null 2>&1; then
    API_URL="http://localhost:3001"
    echo "‚úÖ Development server ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà port 3001"
else
    echo "‚ùå Development server ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà!"
    echo "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô: npm run dev"
    echo ""
    echo "üîß ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ manual migration ‡πÅ‡∏ó‡∏ô:"
    echo "1. ‡πÄ‡∏õ‡∏¥‡∏î Supabase Dashboard"
    echo "2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà SQL Editor"
    echo "3. ‡∏£‡∏±‡∏ô SQL ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå: database/migrations/add_subscription_columns.sql"
    exit 1
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
echo "üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô..."
CHECK_RESPONSE=$(curl -s "$API_URL/api/migrate-subscription")
echo "Response: $CHECK_RESPONSE"

# ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ jq ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
if command -v jq &> /dev/null; then
    echo "$CHECK_RESPONSE" | jq '.' 2>/dev/null || echo "JSON ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"
fi

echo ""
echo "üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á migrate..."

# ‡∏£‡∏±‡∏ô migration
RESPONSE=$(curl -s -X POST \
  -H "Authorization: Bearer $MIGRATION_SECRET" \
  -H "Content-Type: application/json" \
  "$API_URL/api/migrate-subscription")
    
    echo "Migration Response: $RESPONSE"
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    if command -v jq &> /dev/null; then
        if echo "$RESPONSE" | jq -e '.success' > /dev/null 2>&1; then
            echo "‚úÖ Migration ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
            echo "$RESPONSE" | jq '.'
        else
            echo "‚ùå Migration ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"
            echo "$RESPONSE" | jq '.' 2>/dev/null || echo "$RESPONSE"
            exit 1
        fi
    else
        # ‡πÑ‡∏°‡πà‡∏°‡∏µ jq ‡πÉ‡∏ä‡πâ grep ‡πÅ‡∏ó‡∏ô
        if echo "$RESPONSE" | grep -q '"success":true'; then
            echo "‚úÖ Migration ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
        else
            echo "‚ùå Migration ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"
            echo "$RESPONSE"
            exit 1
        fi
    fi
else
    echo "‚ùå Development server ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà!"
    echo "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô: npm run dev"
    echo ""
    echo "üîß ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ manual migration ‡πÅ‡∏ó‡∏ô:"
    echo "1. ‡πÄ‡∏õ‡∏¥‡∏î Supabase Dashboard"
    echo "2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà SQL Editor"
    echo "3. ‡∏£‡∏±‡∏ô SQL ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå: database/migrations/add_subscription_columns.sql"
    exit 1
fi
